class Solution {
    public int[] sortedSquares(int[] nums) {
      
        for(int i = 0;i<nums.length;i++){
            nums[i] = nums[i]*nums[i];
        }
          System.gc();
        return Merge(nums);
    }
    // Merge Sort
    public int[] Merge(int[] Ara){
        
        if(Ara.length<=1){
            return Ara;
        }
        if(Ara.length>1){
        int mid = Ara.length/2;
        int[] Left = new int[mid];
        for(int i = 0; i<mid;i++){
            Left[i] = Ara[i];
        }
        int [] Right = new int[Ara.length-mid];
        for(int i = mid;i<Ara.length;i++){
            Right[i-mid] = Ara[i];
        }
        Merge(Left);
        Merge(Right);
        Merge(Left,Right,Ara);
        }
        return Ara;
        
    }
    private int[] Merge(int[]Left,int[]Right,int[]Ara){
        int i = 0;
        int j = 0;
        int k = 0;
        while(i<Left.length&&j<Right.length){
            if(Left[i]<=Right[j]){
                Ara[k++] = Left[i++];
            } else {
                Ara[k++] = Right[j++];
            }
            
        }
        while(i<Left.length){
        Ara[k++] = Left[i++];
        }
        while(j<Right.length){
            Ara[k++] = Right[j++];
        }
  
        return Ara;




    }


}
